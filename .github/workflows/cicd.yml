name: FastAPI CI/CD

on: [push, pull_request]

jobs:

  flake8:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Lint with flake8
      run: |
        pip install flake8 flake8-html
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        mkdir -p reports/flake8
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
    - name: Archive flake8 coverage results
      uses: actions/upload-artifact@v1
      with:
        name: flake8-coverage-report
        path: reports/flake8/

  pytest:
    name: Unit Testing
    needs: flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov pytest-html pytest-sugar pytest-json-report
        py.test -v --cov --html=reports/pytest/report.html
    - name: Archive pytest coverage results
      uses: actions/upload-artifact@v1
      with:
        name: pytest-coverage-report
        path: reports/pytest/

  security_checks:
    needs: pytest
    runs-on: ubuntu-latest
    name: Security check
    steps:
      - uses: actions/checkout@v2
      - name: Run PyCharm Security
        uses: tonybaloney/pycharm-security@master
        with:
          path: app/

  heroku_deploy:
    name: Deploy Image
    needs: docker_cicd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.4.6 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }} #Must be unique in Heroku
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          healthcheck: "https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/health" # update with your endpoint
          delay: 10
